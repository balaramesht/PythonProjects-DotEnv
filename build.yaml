trigger:
- main

variables:
  azureSubscription: 'MyAzureServiceConnection'
  functionAppName: 'my-func-app-name'
  pythonVersion: '3.10'
  workingDirectory: '$(System.DefaultWorkingDirectory)/MyFunctionApp'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  workingDirectory: '$(workingDirectory)'
  displayName: 'Install dependencies'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(workingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
    artifactName: 'functionapp'
    publishLocation: 'Container'

- task: AzureFunctionApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'functionAppLinux'
    appName: '$(functionAppName)'
    package: '$(Build.ArtifactStagingDirectory)/functionapp.zip'

- task: AzureAppServiceSettings@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appName: '$(functionAppName)'
    resourceGroupName: 'my-resource-group'
    appSettings: |
      [
        {
          "name": "DB_NAME",
          "value": "AzureDB"
        },
        {
          "name": "SECRET_KEY",
          "value": "prod-secret"
        }
      ]
